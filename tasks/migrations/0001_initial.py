# Generated by Django 2.1.5 on 2019-01-13 16:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Event organizer e-mail')),
                ('active', models.BooleanField(default=False, help_text='Set to true to allow registration', verbose_name='Active')),
                ('secret_question', models.CharField(blank=True, help_text='Question to ask for registration', max_length=512, verbose_name='Secret question')),
                ('secret_answer', models.CharField(blank=True, help_text='Answer to secret question', max_length=512, verbose_name='Secret answer')),
                ('public_tasks', models.BooleanField(default=True, help_text='Show tasks in public views', verbose_name='Public tasks')),
                ('ask_email', models.BooleanField(default=False, help_text='Ask email address in registration', verbose_name='Ask e-mail')),
                ('ask_phone', models.BooleanField(default=False, help_text='Ask phone number in registration', verbose_name='Ask phone')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone')),
                ('modifycode', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Modification code')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Event', verbose_name='Event')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Event', verbose_name='Event')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('points', models.IntegerField(default=100, verbose_name='Points')),
                ('min_assignees', models.PositiveIntegerField(default=1, help_text='Minimum number of assignees for the task', verbose_name='Minimum assignees')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Event', verbose_name='Event')),
                ('required_tags', models.ManyToManyField(blank=True, help_text='Tags required for task assignees', to='tasks.Tag', verbose_name='Required tags')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Tags for this person', to='tasks.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Person'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Task'),
        ),
    ]
